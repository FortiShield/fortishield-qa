# Copyright (C) 2015-2020, Wazuh Inc.
# Created by Wazuh, Inc. <info@wazuh.com>.
# This program is free software; you can redistribute it and/or modify it under the terms of GPLv2

import os
import pytest
import json
from time import sleep

from wazuh_testing.tools import LOG_FILE_PATH
from wazuh_testing.tools.configuration import load_wazuh_configurations
from wazuh_testing.tools.monitoring import FileMonitor
from wazuh_testing.tools.file import truncate_file, read_json_file, write_json_file
import wazuh_testing.vulnerability_detector as vd
from wazuh_testing.tools.services import control_service

# Marks
pytestmark = pytest.mark.tier(level=2)

# Variables
current_test_path = os.path.dirname(os.path.realpath(__file__))
test_data_path = os.path.join(current_test_path, 'data')
configurations_path = os.path.join(test_data_path, 'configuration', vd.INVALID_RHEL_FEEDS)
vulnerabilities_data_path = os.path.join(test_data_path, 'vulnerabilities', vd.CUSTOM_NVD_VULNERABILITIES_1)
custom_nvd_json_path = os.path.join(test_data_path, 'feeds', vd.CUSTOM_NVD_FEED)
custom_redhat_oval_feed_path = os.path.join(test_data_path, 'feeds', vd.CUSTOM_REDHAT_OVAL_FEED)

wazuh_log_monitor = FileMonitor(LOG_FILE_PATH)

# Set configuration
parameters = [{'NVD_JSON_PATH': custom_nvd_json_path, 'REDHAT_JSON_PATH': custom_redhat_oval_feed_path}]
metadata = [{'nvd_json_path': custom_nvd_json_path, 'redhat_json_path': custom_redhat_oval_feed_path}]
ids = ['REDHAT_configuration']

# Read JSON data template
nvd_vulnerabilities = read_json_file(vulnerabilities_data_path)

system_data = {"target": "RHEL8", "os_name": "CentOS Linux", "os_major": "8", "os_minor": "1", "name": "centos8"}

test_data = ["extra_field", 12345, "ñ", "テスト", "ИСПЫТАНИЕ", "测试", "اختبار", " ", ""]
test_values = [(field, value) for field in test_data for value in test_data]

field_ids = [f"field_{value[0]}_value_{value[1]}" for value in test_values]

# Configuration data
configurations = load_wazuh_configurations(configurations_path, __name__, params=parameters, metadata=metadata)


# Fixtures
@pytest.fixture(scope='module', params=configurations, ids=ids)
def get_configuration(request):
    """Get configurations from the module."""
    return request.param


@pytest.fixture
def modify_feed(test_values, request):
    """
    Modify the redhat OVAL feeds, setting a test field value
    """
    backup_data = read_json_file(custom_redhat_oval_feed_path)[0]

    modified_data = dict(backup_data)

    modified_data[test_values[0]] = test_values[1]

    write_json_file(custom_redhat_oval_feed_path, [modified_data])

    vd.clean_vuln_and_sys_programs_tables()

    control_service('restart', daemon='wazuh-modulesd')

    vd.set_system(system='RHEL8')

    yield

    control_service('restart', daemon='wazuh-modulesd')

    write_json_file(custom_redhat_oval_feed_path, [backup_data])

    vd.clean_vuln_and_sys_programs_tables()

    truncate_file(LOG_FILE_PATH)


@pytest.mark.parametrize('test_values', test_values)
def test_extra_fields_redhat_feed(test_values, get_configuration, configure_environment, modify_feed):
    """
    Check if vulnerability detector behaves as expected when importing redhat OVAL feeds with extra fields
    """
    vd.check_feed_imported_successfully(wazuh_log_monitor=wazuh_log_monitor, log_system_name=vd.REDHAT_LOG,
                                        expected_vulnerabilities_number=5)
