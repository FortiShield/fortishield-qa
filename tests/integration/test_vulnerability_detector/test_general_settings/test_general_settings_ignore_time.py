# Copyright (C) 2015-2020, Wazuh Inc.
# Created by Wazuh, Inc. <info@wazuh.com>.
# This program is free software; you can redistribute it and/or modify it under the terms of GPLv2

import os
import pytest
from datetime import datetime, timedelta

from wazuh_testing import global_parameters
from wazuh_testing.tools import LOG_FILE_PATH
from wazuh_testing.tools.configuration import load_wazuh_configurations, \
    check_apply_test
from wazuh_testing.tools.monitoring import FileMonitor
from wazuh_testing.vulnerability_detector import insert_package_in_db, insert_vulnerability, make_vuln_callback
from wazuh_testing.vulnerability_detector import DEFAULT_PACKAGE_NAME

# Marks
pytestmark = pytest.mark.tier(level=0)

# variables
test_data_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'data')
configurations_path = os.path.join(test_data_path, 'wazuh_enabled.yaml')

wazuh_log_monitor = FileMonitor(LOG_FILE_PATH)

parameters = [{'IGNORE_TIME': '1h'}]
metadata= [{'ignore_time': '1h'}]


# Configuration data
configurations = load_wazuh_configurations(
    configurations_path, __name__, params=parameters, metadata=metadata)

# fixtures

@pytest.fixture(scope='module', params=configurations)
def get_configuration(request):
    """Get configurations from the module."""
    return request.param

# Tests

@pytest.mark.parametrize('tags_to_apply, custom_callback', [
    ({'ignore_time'}, make_vuln_callback(DEFAULT_PACKAGE_NAME))
])
def test_ignore_time(tags_to_apply, custom_callback, custom_error_message, 
                  get_configuration, configure_environment,
                  restart_modulesd, generate_alert):
    """
    Check if an alert is not fired during the ingnore time  interval
    """

    ignore_time = get_configuration['metadata']['ignore_time']
    seconds_to_travel = time_to_seconds(interval_update_time)/2 + 1

    wazuh_log_monitor.start(timeout=global_parameters.default_timeout,
                        callback=custom_callback,
                        error_message='Alert did not appear at the start of the test')

    # Travels the time set in the update interval parameter
    check_time_travel(time_travel=True, interval=timedelta(seconds=seconds_to_travel))

    with pytest.raises(TimeoutError):
        wazuh_log_monitor.start(timeout=global_parameters.default_timeout,
                        callback=custom_callback,
                        error_message=custom_error_message)
        raise AttributeError('Alert appeared before ignore_time was finished')

    # Travels the time set in the update interval parameter
    check_time_travel(time_travel=True, interval=timedelta(seconds=seconds_to_travel))
      
    wazuh_log_monitor.start(timeout=global_parameters.default_timeout,
                        callback=custom_callback,
                        error_message='Alert did not appear at the end of the test')

    