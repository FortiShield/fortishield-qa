# Copyright (C) 2015-2020, Wazuh Inc.
# Created by Wazuh, Inc. <info@wazuh.com>.
# This program is free software; you can redistribute it and/or modify it under the terms of GPLv2

import os
import pytest
import wazuh_testing.vulnerability_detector as vd

from wazuh_testing.tools import LOG_FILE_PATH
from wazuh_testing.tools.configuration import load_wazuh_configurations
from wazuh_testing.tools.monitoring import FileMonitor

# Marks
pytestmark = pytest.mark.tier(level=1)

# variables
current_test_path = os.path.dirname(os.path.realpath(__file__))
test_data_custom_files = os.path.join(current_test_path, '..', 'data')
test_data_path = os.path.join(current_test_path, "data")
configurations_path = os.path.join(test_data_path, "wazuh_providers_path_multipath.yaml")
custom_redhat_oval_feed_path = os.path.join(test_data_custom_files, 'feeds', vd.CUSTOM_REDHAT_OVAL_FEED)
custom_redhat_json_feed_path = os.path.join(test_data_custom_files, 'feeds', vd.CUSTOM_REDHAT_JSON_FEED)
config = ['test_redhat_default', 'test_redhat_path', 'test_redhat_multipath', 'test_redhat_path_multipath']
wazuh_log_monitor = FileMonitor(LOG_FILE_PATH)

params = [
    {'PROVIDER': 'redhat', 'OS': '8', 'OS_PATH': custom_redhat_oval_feed_path, 'PATH': custom_redhat_json_feed_path}
]

metadata = [
    {'provider': 'redhat', 'os': '8', 'os_path': custom_redhat_oval_feed_path, 'path': custom_redhat_json_feed_path}
]

ids = [f"{item}" for item in config]

# configuration data
configurations = load_wazuh_configurations(configurations_path, __name__, params=params, metadata=metadata)


# fixtures
@pytest.fixture(scope="module", params=configurations, ids=ids)
def get_configuration(request):
    """Get configurations from the module."""
    return request.param


def test_path_multipath(get_configuration, configure_environment, restart_modulesd):
    """
    Check the module works properly when a provider use <os path=...> and <path>
    """
    provider = get_configuration['metadata']['provider']

    if provider == 'redhat':
        os_path = 'https://www.redhat.com/security/data/oval/v2/RHEL8/rhel-8-including-unpatched.oval.xml.bz2'
        path = 'https://access.redhat.com/labs/securitydataapi/cve.json?after=1999-01-01&per_page=1000&page=1'

    try:
        if get_configuration['sections'][0]['elements'][1]['provider']['elements'][1]['os']['attributes']:
            if provider == 'redhat':
                os_path = custom_redhat_oval_feed_path
    except (KeyError, IndexError):
        pass

    try:
        if get_configuration['sections'][0]['elements'][1]['provider']['elements'][2]['path']:
            path_enable = True
            if provider == 'redhat':
                path = custom_redhat_json_feed_path
    except (KeyError, IndexError):
        path_enable = False

    wazuh_log_monitor.start(timeout=vd.VULN_DETECTOR_GLOBAL_TIMEOUT,
                            callback=vd.make_vuln_callback(rf"Path: ('{os_path}'|'none') | URL: 'none'.*",
                                                           prefix='.*wazuh-modulesd.*'),
                            error_message=f"OS path from provider {provider} not correctly assigned")

    if path_enable is True and provider == 'redhat':
        wazuh_log_monitor.start(timeout=vd.VULN_DETECTOR_GLOBAL_TIMEOUT,
                                callback=vd.make_vuln_callback(rf"Multi path: '{path}' | Multi url.*",
                                                               prefix='.*wazuh-modulesd.*'),
                                error_message=f"Path from provider {provider} was not correctly assigned")

    wazuh_log_monitor.start(timeout=vd.VULN_DETECTOR_GLOBAL_TIMEOUT,
                            callback=vd.make_vuln_callback(rf"(Fetching feed from|Downloading) '{os_path}'.*",
                                                           prefix='.*wazuh-modulesd.*'),
                            error_message=f"Event 'Fetching or Downloading {os_path} was not received")

    wazuh_log_monitor.start(timeout=vd.VULN_DETECTOR_GLOBAL_TIMEOUT,
                            callback=vd.make_vuln_callback(rf"(Fetching feed from '{path}'|.*Trying to download).*",
                                                           prefix='.*wazuh-modulesd.*'),
                            error_message=f"Event 'Trying to download {path}' was not received")

    vd.clean_vuln_and_sys_programs_tables()
