- name: Test agent configuration
  hosts: wazuh-windows
  tasks:

    - name: Disable Windows Defender
      win_shell: |
        Set-MpPreference -DisableRealtimeMonitoring 1

    - name: Create temp folder
      win_file:
        path: C:\temp
        state: directory

    - name: Download PSTools
      win_shell: |
        Set-Location C:\temp
        Write-Host "Location set $path"
        Write-Host "Retrieving PSTools..."
        Invoke-WebRequest -Uri https://download.sysinternals.com/files/PSTools.zip -Outfile PSTools.zip

    - name: Unzip PSTools
      win_shell: |
        Expand-Archive -Path C:\temp\PSTools.zip -DestinationPath C:\temp\PSTools

    - name: Copy ossec.conf
      win_copy:
        src: C:\Program Files (x86)\ossec-agent\ossec.conf
        dest: C:\temp
        remote_src: true

    - name: Download sysmon
      win_shell: |
        Set-Location C:\temp
        Write-Host "Location set $path"
        Write-Host "Retrieving Sysmon..."
        Invoke-WebRequest -Uri https://download.sysinternals.com/files/Sysmon.zip -Outfile Sysmon.zip

    - name: Unzip sysmon
      win_shell: |
        Expand-Archive -Path C:\temp\Sysmon.zip -DestinationPath C:\temp\Sysmon

    - name: Copy Sysmon configuration file
      win_copy:
        src: "{{ sysmon_config }}"
        dest: C:\temp\Sysmon

    - name: Install sysmon
      win_shell: |
        cd C:\temp\Sysmon
        ./Sysmon64.exe -accepteula -i sysconfig.xml

    - name: Configure Wazuh to collect Sysmon events
      win_shell: |
        Add-Content 'C:\Program Files (x86)\ossec-agent\ossec.conf' "`n<ossec_config>"
        Add-Content 'C:\Program Files (x86)\ossec-agent\ossec.conf' "`n<localfile>"
        Add-Content 'C:\Program Files (x86)\ossec-agent\ossec.conf' `
        "`n<location>Microsoft-Windows-Sysmon/Operational</location>"
        Add-Content 'C:\Program Files (x86)\ossec-agent\ossec.conf' "`n<log_format>eventchannel</log_format>"
        Add-Content 'C:\Program Files (x86)\ossec-agent\ossec.conf' "`n</localfile>"
        Add-Content 'C:\Program Files (x86)\ossec-agent\ossec.conf' "`n</ossec_config>"

    - name: Copy trigger_emotet.exe in the agent
      win_copy:
        src: "{{ emotet_file }}"
        dest: C:\temp

    - name: Restart wazuh-agent (Windows)
      win_shell: |
        net stop wazuh
        net start wazuh

- name: Test manager configuration
  hosts: wazuh-manager
  tasks:

    - name: Configure local rules
      become: true
      blockinfile:
        path: /var/ossec/etc/rules/local_rules.xml
        insertafter: </groups>
        block: |
          <group name="emotet,">
          <rule id="255559" level="5">
          <if_group>sysmon</if_group>
          <match>technique_name=Indirect Command Execution</match>
          <description>Indirect Command Execution: $(win.eventdata.image)</description>
          <mitre>
          <id>T1202</id>
          </mitre>
          </rule>

          <rule id="255561" level="5">
          <if_group>sysmon</if_group>
          <match>technique_name=Regsvr32</match>
          <description>Regsvr32: $(win.eventdata.image)</description>
          <mitre>
          <id>T1218</id>
          </mitre>
          </rule>

          <rule id="255926" level="12">
          <if_sid>255559</if_sid>
          <regex>WINWORD.EXE</regex>
          <description>Word Executing WScript $(win.eventdata.image)</description>
          <mitre>
          <id>T1059.005</id>
          </mitre>
          </rule>
          </group>
        marker: <!-- {mark} ANSIBLE MANAGED BLOCK -->

    - name: Restart wazuh-manager
      become: true
      shell: systemctl restart wazuh-manager
