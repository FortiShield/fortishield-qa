False positives:
{"code": "*         # Python 3\n*         stdin = input(msg)\n*     return stdin", "filename": "framework/scripts/agent_groups.py", "issue_confidence": "HIGH", "issue_severity": "HIGH", "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.", "line_number": 29, "line_range": [29], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input", "test_id": "B322", "test_name": "blacklist"}
{"code": "* import struct\n* import subprocess\n* import sys", "filename": "framework/scripts/wazuh-logtest.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Consider possible security implications associated with subprocess module.", "line_number": 14, "line_range": [14], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess", "test_id": "B404", "test_name": "blacklist"}
{"code": "*         try:\n*             event = input('\\n')\n*         # Handle user interrupt execution or EOF", "filename": "framework/scripts/wazuh-logtest.py", "issue_confidence": "HIGH", "issue_severity": "HIGH", "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.", "line_number": 94, "line_range": [94], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input", "test_id": "B322", "test_name": "blacklist"}
{"code": "*         try:\n*             proc = subprocess.Popen([wazuh_control, \"info\"], stdout=subprocess.PIPE)\n*             (stdout, stderr) = proc.communicate()", "filename": "framework/scripts/wazuh-logtest.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "subprocess call - check for execution of untrusted input.", "line_number": 421, "line_range": [421], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html", "test_id": "B603", "test_name": "subprocess_without_shell_equals_true"}
{"code": "*         chmod_r(group_path, 0o660)\n*         chmod(group_path, 0o770)\n*         msg = f\"Group '{group_id}' created.\"", "filename": "framework/wazuh/agent.py", "issue_confidence": "HIGH", "issue_severity": "MEDIUM", "issue_text": "Chmod setting a permissive mask 0o770 on file (group_path).", "line_number": 579, "line_range": [579], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html", "test_id": "B103", "test_name": "set_bad_file_permissions"}
{"code": "*                         makedirs(agent_backup_dir)\n*                         chmod_r(agent_backup_dir, 0o750)\n*                         not_agent_dir = False", "filename": "framework/wazuh/core/agent.py", "issue_confidence": "HIGH", "issue_severity": "MEDIUM", "issue_text": "Chmod setting a permissive mask 0o750 on file (agent_backup_dir).", "line_number": 611, "line_range": [611], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html", "test_id": "B103", "test_name": "set_bad_file_permissions"}
{"code": "*         else:\n*             hash1 = hashlib.md5(\"{0}{1}{2}\".format(int(time()), name, platform()).encode())\n*             hash1.update(urandom(128))", "filename": "framework/wazuh/core/agent.py", "issue_confidence": "HIGH", "issue_severity": "MEDIUM", "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.", "line_number": 816, "line_range": [816], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5", "test_id": "B303", "test_name": "blacklist"}
{"code": "*             hash1.update(urandom(128))\n*             hash2 = hashlib.md5(f\"{ip}{agent_id}\".encode())\n*             agent_key = hash1.hexdigest() + hash2.hexdigest()", "filename": "framework/wazuh/core/agent.py", "issue_confidence": "HIGH", "issue_severity": "MEDIUM", "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.", "line_number": 818, "line_range": [818], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5", "test_id": "B303", "test_name": "blacklist"}
{"code": "* from shutil import rmtree\n* from subprocess import check_output\n* from time import time", "filename": "framework/wazuh/core/cluster/cluster.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Consider possible security implications associated with check_output module.", "line_number": 16, "line_range": [16], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess", "test_id": "B404", "test_name": "blacklist"}
{"code": "*     \"\"\"\n*     return set(str(check_output(['hostname', '--all-ip-addresses']).decode()).split(\" \")[:-1])\n* ", "filename": "framework/wazuh/core/cluster/cluster.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Starting a process with a partial executable path", "line_number": 41, "line_range": [41], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html", "test_id": "B607", "test_name": "start_process_with_partial_path"}
{"code": "*     \"\"\"\n*     return set(str(check_output(['hostname', '--all-ip-addresses']).decode()).split(\" \")[:-1])\n* ", "filename": "framework/wazuh/core/cluster/cluster.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "subprocess call - check for execution of untrusted input.", "line_number": 41, "line_range": [41], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html", "test_id": "B603", "test_name": "subprocess_without_shell_equals_true"}
{"code": "*     failed_files = list()\n*     zip_file_path = os.path.join(common.wazuh_path, 'queue', 'cluster', name, f'{name}-{time()}-{str(random())[2:]}.zip')\n*     if not os.path.exists(os.path.dirname(zip_file_path)):", "filename": "framework/wazuh/core/cluster/cluster.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.", "line_number": 317, "line_range": [317], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random", "test_id": "B311", "test_name": "blacklist"}
{"code": "* import os\n* import subprocess\n* from contextvars import ContextVar", "filename": "framework/wazuh/core/common.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Consider possible security implications associated with subprocess module.", "line_number": 7, "line_range": [7], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess", "test_id": "B404", "test_name": "blacklist"}
{"code": "*     try:\n*         proc = subprocess.Popen([wazuh_control, option], stdout=subprocess.PIPE)\n*         (stdout, stderr) = proc.communicate()", "filename": "framework/wazuh/core/common.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "subprocess call - check for execution of untrusted input.", "line_number": 62, "line_range": [62], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html", "test_id": "B603", "test_name": "subprocess_without_shell_equals_true"}
{"code": "* import re\n* import subprocess\n* import sys", "filename": "framework/wazuh/core/configuration.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Consider possible security implications associated with subprocess module.", "line_number": 9, "line_range": [9], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess", "test_id": "B404", "test_name": "blacklist"}
{"code": "* from os import remove, path as os_path\n* from xml.etree.ElementTree import tostring\n* \n* from defusedxml.minidom import parseString", "filename": "framework/wazuh/core/configuration.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Using tostring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace tostring with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.", "line_number": 15, "line_range": [15, 16], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree", "test_id": "B405", "test_name": "blacklist"}
{"code": "*         try:\n*             subprocess.check_output([os_path.join(common.wazuh_path, \"bin\", \"verify-agent-conf\"), '-f', tmp_file_path],\n*                                     stderr=subprocess.STDOUT)\n*         except subprocess.CalledProcessError as e:", "filename": "framework/wazuh/core/configuration.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "subprocess call - check for execution of untrusted input.", "line_number": 714, "line_range": [714, 715], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html", "test_id": "B603", "test_name": "subprocess_without_shell_equals_true"}
{"code": "* from shutil import Error, copyfile, move\n* from subprocess import CalledProcessError, check_output\n* from xml.etree.ElementTree import ElementTree", "filename": "framework/wazuh/core/utils.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Consider possible security implications associated with CalledProcessError module.", "line_number": 24, "line_range": [24], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess", "test_id": "B404", "test_name": "blacklist"}
{"code": "* from subprocess import CalledProcessError, check_output\n* from xml.etree.ElementTree import ElementTree\n* \n* from cachetools import cached, TTLCache", "filename": "framework/wazuh/core/utils.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "Using ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.", "line_number": 25, "line_range": [25, 26], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree", "test_id": "B405", "test_name": "blacklist"}
{"code": "*     try:\n*         output = check_output(command)\n*     except CalledProcessError as error:", "filename": "framework/wazuh/core/utils.py", "issue_confidence": "HIGH", "issue_severity": "LOW", "issue_text": "subprocess call - check for execution of untrusted input.", "line_number": 112, "line_range": [112], "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html", "test_id": "B603", "test_name": "subprocess_without_shell_equals_true"}
{"code": "* def md5(fname):\n*     hash_md5 = hashlib.md5()\n*     with open(fname, \"rb\") as f:", "filename": "framework/wazuh/core/utils.py", "issue_confidence": "HIGH", "issue_severity": "MEDIUM", "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.", "line_number": 641, "line_range": [641], "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5", "test_id": "B303", "test_name": "blacklist"}
